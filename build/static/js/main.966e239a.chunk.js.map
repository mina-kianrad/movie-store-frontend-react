{"version":3,"sources":["services/loggingService.js","services/httpService.js","services/authService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","services/movieService.js","services/genreService.js","utils/paginate.js","components/searchBox.jsx","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForrm.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","expectedError","status","logger","toast","Promise","reject","get","put","post","delete","setJwt","jwt","headers","common","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","Like","classes","this","props","liked","onClick","style","cursor","className","aria-hidden","Component","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","columns","map","key","lable","TableBody","renderCell","item","content","_","createKey","_id","Table","MoviesTable","movie","Link","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","movieUrl","id","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPageData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Input","label","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","notFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","LoginForm","username","location","window","from","pathname","rersponse","Redirect","Logout","register","RegisterForm","userService","ProtectedRoute","component","render","Route","App","Switch","NotFound","exact","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.966e239a.chunk.js","sourcesContent":["//import Raven from 'raven-js';\n\nfunction init() {\n    //removed the initilaization from Raven\n}\n\nfunction log(error) {\n    //Raven.captureException(error);   \n    console.error(error);\n}\n\nexport default {\n    init,\n    log\n}","import axios from 'axios';\nimport logger from \"./loggingService\";\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n    console.log(expectedError);\n  \n  if (!expectedError) {\n    logger.log(error);  \n    toast.error(\"An unexpected error occurred.\");\n  }\n  console.log(error);\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common['x-auth-token'] = jwt;\n};\n\nexport default {\n  get: axios.get,\n  put: axios.put,\n  post: axios.post,\n  delete: axios.delete,\n  setJwt\n};","import jwtDecode from 'jwt-decode';\nimport http from './httpService';\n\nconst apiEndpoint = \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n    const { data: jwt } = await http.post(apiEndpoint, { email, password });\n    localStorage.setItem(tokenKey, jwt);\n}\nexport function loginWithJwt(jwt) {           \n    localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n    localStorage.removeItem(tokenKey);\n\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(tokenKey);\n        return jwtDecode(jwt);\n      } \n    catch (ex) {\n        return null;\n      }\n}\n\nexport function getJwt() {\n    return localStorage.getItem(tokenKey);\n}\n\nexport default {\n    login,\n    loginWithJwt,\n    logout,\n    getCurrentUser,\n    getJwt,\n\n}","import React, { Component } from 'react';\n\nclass Like extends Component {\n    render() { \n        let classes = \"fa fa-heart\";\n        if (!this.props.liked) classes += \"-o\";\n        return (\n            <i\n                onClick={this.props.onClick}\n                style={{ cursor: \"pointer\" }}\n                className={classes}\n                aria-hidden=\"true\"\n            \n            />);\n     }\n}\n \nexport default Like;","import React, { Component } from 'react';\n\nclass TableHeader extends Component {\n    raiseSort = path => {\n        const sortColumn = { ...this.props.sortColumn };\n        if (sortColumn.path === path)\n            sortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\n        else {\n            sortColumn.path = path;\n            sortColumn.order = 'asc';\n        }\n        this.props.onSort(sortColumn);\n    };\n\n    renderSortIcon = column => {\n        const { sortColumn } = this.props;\n        if (column.path !== sortColumn.path) return null;\n        if (this.props.sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\n        return <i className=\"fa.fa-sort-desc\"></i>;\n    };\n\n    render() { \n        return (\n            <thead>\n                <tr>\n                  {this.props.columns.map(column => (\n                    <th\n                        className=\"clickable\"\n                        key={column.path || column.key}\n                        onClick={() => this.raiseSort(column.path)}\n                    >\n                        {column.lable} {this.renderSortIcon(column)}\n                    </th>\n                ))}\n                </tr>\n            </thead>\n       );\n    }\n}\n \nexport default TableHeader;","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nclass TableBody extends Component {\n    renderCell = (item, column) => {\n        if (column.content) return column.content(item);\n        \n        return _.get(item, column.path);\n    };\n\n    createKey = (item, column) => {\n        return item._id + (column.path || column.key);\n    };\n\n    render() {\n        const { data, columns } = this.props;\n\n        return (\n            <tbody>\n                {data.map(item => (\n                    <tr key={item._id}>\n                        {columns.map(column => (\n                            <td key={this.createKey(item, column)}>\n                                {this.renderCell(item, column)}\n                            </td>\n                        ))}\n                    </tr>\n                ))}\n            </tbody>\n    \n        );\n    }\n}\n \nexport default TableBody;","import React, { Component } from 'react';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n    return (\n    <table className=\"table\">\n        <TableHeader\n            columns={columns}\n            sortColumn={sortColumn}\n            onSort={onSort}\n        />\n        <TableBody columns={columns} data={data} />\n    </table> );\n}\n \nexport default Table;","import React, { Component } from 'react';\nimport auth from '../services/authService';\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\nimport { Link } from 'react-router-dom';\n\nclass MoviesTable extends Component {\n    columns = [\n        {\n            path: \"title\",\n            lable: \"Title\",\n            content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n        },\n        { path: \"genre.name\", lable: \"Genre\" },\n        { path: \"numberInStock\", lable: \"Stock\" },\n        { path: \"dailyRentalRate\", lable: \"Rate\" },\n        {\n            key: \"Like\",\n            content: movie => (<Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n            )\n        }\n\n    ];\n\n    deleteColumn = {\n        key: \"Delete\",\n        content: movie => (\n            <button\n                onClick={() => this.props.onDelete(movie)}\n                className=\"btn btn-danger btn-sm\"\n            >\n                Delete\n            </button    \n            >\n       )\n    }  \n\n    constructor() {\n        super();\n        const user = auth.getCurrentUser();\n        if (user && user.isAdmin)\n            this.columns.push(this.deleteColumn);\n    \n    }\n\n\n\n    render() { \n        const { movies, onSort, sortColumn} = this.props;\n        \n        return (\n            <Table\n                columns={this.columns}\n                data={movies}\n                sortColumn={sortColumn}\n                onSort={onSort}\n            />\n        );       \n    }\n}\n \nexport default MoviesTable;\n","import React, { Component } from 'react';\n\nconst ListGroup = (props) => {\n    const {\n        items,\n        textProperty,\n        valueProperty,\n        selectedItem,\n        onItemSelect\n    } = props;\n\n    return <ul className=\"list-group\">\n        {items.map(item => (\n            <li\n                onClick={() => onItemSelect(item)}\n                key={item[valueProperty]}\n                className={ item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}\n            >\n                {item[textProperty]}\n            </li>\n        ))}\n    </ul> ;\n}\n\nListGroup.defaultProps = {\n    textProperty: \"name\",\n    valueProperty: \"_id\"\n};\n \nexport default ListGroup;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst Pagination = props => {\n    const { itemsCount, pageSize, currentPage, onPageChange } = props;\n\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    if (pagesCount === 1) return null;\n    const pages = _.range(1, pagesCount + 1);\n\n    return <nav>\n        <ul className=\"pagination\">\n            {pages.map(page => (\n                <li key={page} className={ page === currentPage ? 'page-item active' : 'page-item'}>\n                    <a className=\"page-link\" onClick={() => onPageChange(page)}>\n                        {page}\n                    </a>\n                </li>\n            ))}\n        </ul>\n    </nav>\n       \n}\n\n  Pagination.propTypes = {\n      itemsCount: PropTypes.number.isRequired,\n     pageSize: PropTypes.number.isRequired,\n     currentPage: PropTypes.number.isRequired,\n     onPageChange: PropTypes.func.isRequired\n  };\n \nexport default Pagination;","import http from './httpService';\n\nconst apiEndpoint = \"/movies\";\n\nfunction movieUrl(id) {\n    return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n    return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n    return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n    if (movie._id) {\n        const body = { ...movie };\n        delete body._id;\n        return http.put(movieUrl(movie._id), body);\n    }\n    http.post(apiEndpoint, movie )\n   \n}\n  \nexport function deleteMovie(movieId) {\n    return http.delete(movieUrl(movieId));\n\n  }\n","import http from './httpService';\n\nexport function getGenres() {\n    return http.get('/genres');\n}","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items)\n        .slice(startIndex)\n        .take(pageSize)\n        .value();\n}","import React, { Component } from 'react';\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n \nexport default SearchBox;","import React, { Component } from 'react';\nimport MoviesTable from './moviesTable';\nimport ListGroup from './common/listGroup';\nimport { toast } from 'react-toastify';\nimport Pagination from './common/pagination';\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport { Link } from 'react-router-dom';\nimport SearchBox from \"./searchBox\";\nimport _ from 'lodash';\n\n\n\n\nclass  Movies extends Component {\n    state = {\n        movies: [],\n        genres: [],\n        pageSize: 4,\n        currentPage: 1,\n        searchQuery: \"\",\n        selectedGenre: null,\n        sortColumn: { path: 'title', order: 'asc'}\n    };\n\n    handleDelete = async movie => {\n        const originalMovies = this.state.movies;\n        const movies = originalMovies.filter(m => m._id !== movie._id);\n        this.setState({ movies });\n        try {\n            await deleteMovie(movie._id);\n        }\n        catch (ex) {\n            if (ex.response && ex.response.status === 404)\n                toast.error('This movie has already been deleted');\n            \n            this.setState({ movies: originalMovies });\n        }\n    \n    }\n    handleLike = (movie) => {\n        const movies = [...this.state.movies];\n        const index = movies.indexOf(movie);\n        movies[index] = { ...movies[index] };\n        movies[index].liked = !movies[index].liked;\n        this.setState({ movies });\n\n    }\n\n    handlePageChange = page => {\n        this.setState({ currentPage: page });\n    }\n\n    handleGenreSelect = genre => {\n        this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n    }\n\n    handleSearch = query => {\n        this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n      };\n\n    handleSort = sortColumn => {\n        this.setState({ sortColumn });\n    }\n\n    async componentDidMount() {\n        const { data } = await getGenres();\n        const genres = [{ _id: \"\", name: \"Joy Genres\" }, ...data];\n\n        const { data: movies } = await getMovies();\n        this.setState({ movies, genres });\n    }\n\n    getPageData = () => {\n        const {\n            pageSize,\n            currentPage,\n            sortColumn,\n            selectedGenre,\n            searchQuery,\n            movies: allMovies\n        } = this.state;\n\n        let filtered = allMovies;\n        if (searchQuery)\n        filtered = allMovies.filter(m =>\n            m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n        );\n        else if (selectedGenre && selectedGenre._id)\n        filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n        const movies = paginate(sorted, currentPage, pageSize);\n\n        return { totalCount: filtered.length, data: movies };\n    };\n\n    render() {\n        const { length: count } = this.state.movies;\n        const { user } = this.props;\n        const {\n            pageSize,\n            currentPage,\n            sortColumn,\n            searchQuery,\n        } = this.state;\n       \n        \n        const { totalCount, data: movies } = this.getPageData();\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <ListGroup\n                        items={this.state.genres}\n                        selectedItem={this.state.selectedGenre}\n                        onItemSelect={this.handleGenreSelect}\n                        onSort={this.handleSort}\n                    />\n                </div>\n                <div className=\"col\">\n                    {user && (\n                        <Link\n                        to=\"/movies/new\"\n                        className=\"btn btn-primary\"\n                        style={{ marginBottom: 20 }}\n                    >\n                            New Movie        \n                    </Link>\n                    )}  \n                    <p>Showing {totalCount} movies in the database</p>\n                    <SearchBox value={searchQuery} onChange={this.handleSearch}/>\n                    <MoviesTable\n                        movies={movies}\n                        sortColumn={sortColumn}\n                        onLike={this.handleLike}\n                        onDelete={this.handleDelete}\n                        onSort={this.handleSort}\n                    />\n                    <Pagination\n                        itemsCount={totalCount}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={this.handlePageChange}\n                    /> \n                    \n                </div>                     \n        </div>\n        \n    )\n }   \n}   \n \nexport default Movies;","import React, { Component } from 'react';\n\nconst Input = ({ name, label, error, ...rest}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input\n                {...rest}\n                name={name}\n                id={name}\n                className=\"form-control\"\n            />\n           {error && <div className=\"alert alert-danger\">{error}</div>}    \n            \n        </div>\n     );\n}\n \nexport default Input;","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;","import React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport Input from './input';\nimport Select from './select';\n\nclass Form extends Component {\n    state = {\n        data: {},\n        errors: {}\n    };\n\n    validate = () => {\n        const options = { abortEarly: false }\n        const { error } = Joi.validate(this.state.data, this.schema, options);\n        if (!error) return null;\n\n        const errors = {};\n        for (let item of error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    };\n\n    validateProperty = ({ name, value }) => {\n        const obj = { [name]: value };\n        const schema = { [name]: this.schema[name] };\n        const { error } = Joi.validate(obj, schema);\n        return error ? error.details[0].message : null;\n    };\n    \n     handleSubmit = e => {\n        e.preventDefault();\n        const errors = this.validate();\n        console.log(errors); //keep it to know/remember for troubleshooting\n        this.setState({ errors: errors || {} });\n        if (errors) return;\n         \n        this.doSubmit();\n     }\n    \n     handleChange = ({ currentTarget: input }) => {\n        const errors = { ...this.state.errors };\n        const errorMessage = this.validateProperty(input);\n        if (errorMessage) errors[input.name] = errorMessage;\n        else delete errors[input.name];\n\n        const data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data, errors });\n    }\n\n    renderButton(label) {\n        return <button disabled={this.validate()}\n                    className=\"btn btn-primary\">{label}\n               </button>\n    }\n\n    renderSelect(name, label, options) {\n        const { data, errors } = this.state;\n        return (\n            <Select\n                name={name}\n                value={data[name]}\n                label={label}\n                options={options}\n                onChange={this.handleChange}\n                error={errors[name]}\n            />\n        );\n    }\n\n    renderInput(name, label, type = \"text\") {\n        const { data, errors } = this.state;\n        return (\n            <Input\n                type={type}\n                name={name}\n                value={data[name]}\n                label={label}\n                onChange={this.handleChange}\n                error = {errors[name]}            \n            />\n        )\n    }\n\n}\n \nexport default Form;","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\"\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\")\n  };\n \n   async populateGenres(){\n      const { data: genres } = await getGenres();\n      this.setState({ genres });\n   }\n  \n  async populateMovie() {\n    try {\n\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    }\n    catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.push(\"/not-found\");//adding this fixed the issue\n        this.props.history.replace(\"/not-found\");\n       \n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n\n\n\n","import React, { Component } from 'react';\n\nclass Customers extends Component {\n    state = {  }\n    render() { \n        return ( \n            <h1>Customers</h1>\n         );\n    }\n}\n \nexport default Customers;","import React, { Component } from 'react';\n\nclass Rentals extends Component {\n    state = {  }\n    render() { \n        return ( \n            <h1>Rentals</h1>\n         );\n    }\n}\n \nexport default Rentals;","import React, { Component } from 'react';\n\nclass notFound extends Component {\n    state = {  }\n    render() { \n        return ( <h1>Not Found</h1>\n\n         );\n    }\n}\n \nexport default notFound;","import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport Movies from './movies';\n\nconst NavBar = ({ user } ) => {\n    return ( \n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"/\">\n                Vidly\n            </Link>\n            <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarNavAltMarkup\"\n                aria-controls=\"navbarNavAltMarkup\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n            >\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                <div className=\"navbar-nav\">\n                    <NavLink className=\"nav-item nav-link\" to=\"/movies\">\n                        Movies\n                    </NavLink>\n                    <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n                        Customers\n                    </NavLink>\n                    <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n                        Rentals\n                    </NavLink>\n                    {!user && (\n                    <React.Fragment>\n                    <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                        Login\n                    </NavLink>\n                            <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                        Register\n                    </NavLink>\n                    </React.Fragment>\n                    )}\n                    {user && (\n                    <React.Fragment>\n                            <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                                {user.name}\n                    </NavLink>\n                            <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                                Logout\n                    </NavLink>\n                    </React.Fragment>\n                        \n                   )}\n                </div>\n            </div>\n         </nav>\n\n   \n    );\n}\n \nexport default NavBar;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Form from './common/form';\nimport auth from '../services/authService';\nimport { join } from 'lodash';\nimport Joi from 'joi-browser';\n\n\nclass LoginForm extends Form {\n    state = {\n        data: { username: \"\", password: \"\" },\n        errors: {}\n    };\n  \n    schema = {\n        username: Joi.string()\n            .required()\n            .label(\"Username\"),\n        password: Joi.string()\n            .required()\n            .label(\"Password\")\n    }\n\n    doSubmit = async () => {\n        try {\n            const { data } = this.state;\n            console.log(data);\n            await auth.login(data.username, data.password);\n            const { state } =  this.props.location;\n            window.location= state ? state.from.pathname : '/';\n        } catch (ex) {\n             if (ex.response && ex.response.status === 400) {\n                 console.log(ex.rersponse);\n                 const errors = { ...this.state.errors };\n                 errors.username = ex.response.data;\n                 this.setState({ errors });\n             }\n\n            \n        }\n    };\n    \n    render() { \n        if (auth.getCurrentUser()) return <Redirect to='/' />;\n        return (\n            <div>\n                <h1>Login</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput('username', 'Username')}\n                    {this.renderInput('password', 'Password', 'password')}\n                    {this.renderButton('Login')}\n                </form>\n\n            </div>\n         );\n    }\n}\n \nexport default LoginForm;   ","import React, { Component } from 'react';\nimport  auth  from \"../services/authService\";\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        auth.logout();\n        window.location = '/';\n    }   \n    render() { \n        return null;\n    }\n}\n \nexport default Logout;","import http from './httpService';\nimport { useReducer } from 'react';\n\nconst apiEndpoint = \"/users\";\n\nexport function register(user) {\n    return http.post(apiEndpoint, {\n        email: user.username,\n        password: user.password,\n        name: user.name\n    });  \n}","import React, { Component } from 'react';\nimport Form from './common/form';\nimport * as userService from '../services/userService';\nimport auth from '../services/authService';\nimport { join } from 'lodash';\nimport Joi from 'joi-browser';\n\n\nclass RegisterForm extends Form {\n    state = { \n        data: { username: \"\", password: \"\", name: \"\" },\n        errors: {}\n    }\n    \n    schema = {\n        username: Joi.string()\n            .required()\n            .email()\n            .label(\"Username\"),\n        password: Joi.string()\n            .required()\n            .min(5)\n            .label(\"Password\"),\n         name: Joi.string()\n             .required()\n             .label(\"Name\")       \n    }\n     doSubmit = async () => {\n         try {\n             const response = await userService.register(this.state.data);\n             console.log(response);\n             auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n             window.location= \"/\";\n         } catch (ex) {\n             if (ex.response && ex.response.status === 400) {\n                 const errors = { ...this.state.errors };\n                 errors.username = ex.response.data;\n                 this.setState({ errors });\n             }\n         }\n\n     }\n\n    render() { \n        return (\n            <div>\n                <h1>Register</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput('username', 'Username')}\n                    {this.renderInput('password', 'Password', 'password')}\n                    {this.renderInput('name', 'Name')}\n                    {this.renderButton('Register')}\n                </form>\n\n            </div>\n\n          );\n    }\n}\n \nexport default RegisterForm;","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport auth from '../../services/authService';\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest } ) => {\n    return (\n        <Route\n        {...rest}   \n            render={props => {\n                console.log('mina-props', props);\n                if (!auth.getCurrentUser()) return <Redirect to={{\n                    pathname: \"/login\",\n                    state: { from: props.location}\n                }}\n                />;\n            return Component ? <Component {...props} /> : render(props);\n        }}\n        />\n    );\n}\n \nexport default ProtectedRoute;","import React, { Component} from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Movies from './components/movies';\nimport MovieForm from './components/movieForm';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport LoginForm from './components/loginForm';\nimport Logout from './components/logout';\nimport RegisterForm from './components/registerForrm';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\n\nclass App extends Component{\n  state = {};\n  \n  componentDidMount() {\n    const  user  = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user}/>\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={this.state.user} />}\n              />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}